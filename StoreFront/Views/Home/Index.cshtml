@using System;
@using System.Collections.Generic;
@using System.Linq;
@using StoreFront.Models;
@model IEnumerable<StoreFront.Models.Treat>

<div>
    <h1>Pierre's Pastery Treats</h1>
</div>


@{
    int columnAssignment= 1;
    List<Treat> column1 = new List<Treat> {};
    List<Treat> column2 = new List<Treat> {};
    List<Treat> column3 = new List<Treat> {};
    List<Treat> column4 = new List<Treat> {};

    @foreach (Treat treat in Model)
    {
        @switch(columnAssignment)
        {
            case 1:
                column1.Add(treat);
                break;
            case 2:
                column2.Add(treat);
                break;
            case 3:
                column3.Add(treat);
                break;
            case 4:
                column4.Add(treat);
                break;
            default:
                break;
        }

        @if (columnAssignment >= 4)
        {
            columnAssignment = 1;
        }
        else
        {
            columnAssignment++;
        } 
    }
    List<List<Treat>> columnHolder = new List<List<Treat>> {column1, column2, column3, column4};

    <div class="info-holder row">
        @foreach (List<Treat> column in columnHolder)
        {
            <div class="info-column">
                @foreach (Treat treat in column)
                {
                    <div class="info-item" id="@treat.TreatId">
                        <h4 class="info-header">
                            @treat.Name
                        </h4>
                        <p class="info-rating">
                        @{
                            string ratingOutput = "";
                            @for (int l=1; l<=5; l++)
                            {
                                string output = "";
                                @if (l<=treat.Rating)
                                {                                
                                    output+= "<i class='fas fa-star'></i>";
                                }
                                else
                                {
                                    output+= "<i class='fas fa-star fas-faded'></i>";
                                }
                                ratingOutput+= output;
                            }
                            @Html.Raw(ratingOutput);
                        }                            
                        </p>
                        <p class="info-description">
                            @treat.Description
                        </p>
                        <ul class="info-tag-holder">
                            @foreach(var join in treat.Flavors)
                            {
                                <li class="info-tag">@join.Flavor.Name</li>
                            }
                        </ul>
                    </div>
                }
            </div>

        }
    </div>
}





